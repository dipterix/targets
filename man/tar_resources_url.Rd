% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tar_resources_url.R
\name{tar_resources_url}
\alias{tar_resources_url}
\title{Target resources: URL storage formats}
\usage{
tar_resources_url(
  handle = targets::tar_option_get("resources")$url$handle,
  max_tries = targets::tar_option_get("resources")$url$max_tries,
  seconds_interval = targets::tar_option_get("resources")$url$seconds_interval,
  seconds_timeout = targets::tar_option_get("resources")$url$seconds_interval
)
}
\arguments{
\item{handle}{Object returned by \code{curl::new_handle} or \code{NULL}.
Defaults to \code{NULL}.}

\item{max_tries}{Positive integer of length 1, maximum number of tries
to access a URL.}

\item{seconds_interval}{Nonnegative numeric of length 1,
number of seconds to wait between individual retries
while attempting to connect to the URL.
Use \code{\link[=tar_resources_network]{tar_resources_network()}} instead.}

\item{seconds_timeout}{Nonnegative numeric of length 1,
number of seconds to wait before timing out while trying to
connect to the URL.
Use \code{\link[=tar_resources_network]{tar_resources_network()}} instead.}
}
\value{
Object of class \code{"tar_resources_url"}, to be supplied
to the url argument of \code{tar_resources()}.
}
\description{
Create the \code{url} argument of \code{tar_resources()}
to specify optional settings for URL storage formats.
See the \code{format} argument of \code{\link[=tar_target]{tar_target()}} for details.
}
\section{Resources}{

Functions \code{\link[=tar_target]{tar_target()}} and \code{\link[=tar_option_set]{tar_option_set()}}
each takes an optional \code{resources} argument to supply
non-default settings of various optional backends for data storage
and high-performance computing. The \code{tar_resources()} function
is a helper to supply those settings in the correct manner.

In \code{targets} version 0.12.2 and above, resources are inherited one-by-one
in nested fashion from \code{tar_option_get("resources")}.
}

\examples{
if (identical(Sys.getenv("TAR_EXAMPLES"), "true")) { # for CRAN
# Somewhere in you target script file (usually _targets.R):
tar_target(
  name,
  command(),
  format = "url",
  resources = tar_resources(
    url = tar_resources_url(handle = curl::new_handle())
  )
)
}
}
\seealso{
Other resources: 
\code{\link{tar_resources}()},
\code{\link{tar_resources_fst}()},
\code{\link{tar_resources_future}()},
\code{\link{tar_resources_network}()}
}
\concept{resources}
